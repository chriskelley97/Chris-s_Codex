#include <stdio.h>
#include <stdlib.h>

typedef struct node {
    int data;
    struct node *next;
} node;

// create a head
node *head = NULL;

void add(int data) {
    node *new_node = malloc(sizeof(node));
    new_node->data = data;
    new_node->next = NULL;
    if (head == NULL) {
        head = new_node;
    } else if (head->next == NULL) {
        head->next = new_node;
    } else {
        node *traverse = head;
        // reach the end of the list
        while (traverse->next != NULL) {
            traverse = traverse->next;
        }
        traverse->next = new_node; // make the last node point to the new node
    }
}

void poll(){
    if (head == NULL) {
        printf("Queue is empty");
    } else {
        node *temp = head;
        head = head->next; // updating the head to the next node
        free(temp);
    }
}

void peek(){
    if(head == NULL){
        printf("Queue is empty");
    } else {
        printf("%d", head->data);
    }
}


void pop(){
    if(head == NULL){
        printf("Stack is empty");
    }else{
        if(head->next == NULL) {
            free(head);
            head = NULL;
        }else{
            node *traverse = head;
            // stop one node before last node
            while(traverse->next->next != NULL){
                traverse = traverse->next;
            }
            traverse->next = NULL; // make one node before the last node as null thus removing the last node
        }
    }
}

void display() {
    if (head == NULL) {
        printf("List is empty");
    } else {
        printf("%d ", head->data);
        if (head->next != NULL) {
            node *current = head->next;
            while (current != NULL) {
                printf("%d ", current->data);
                current = current->next;
            }
        }
    }
}

int main() {
    printf("Please let me know how many values to enter: ");
    int n;
    scanf("%d", &n);


    for (int i = 0; i < n; i++) {
        // create a temporary node
        int data;
        printf("Enter the data: ");
        scanf("%d", &data);
        add(data);
    }
    display();

    poll();
    display();
    peek();
    poll();
    display();


    return 0;
}
